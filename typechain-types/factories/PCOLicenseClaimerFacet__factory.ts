/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PCOLicenseClaimerFacet,
  PCOLicenseClaimerFacetInterface,
} from "../PCOLicenseClaimerFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_licenseId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payer",
        type: "address",
      },
    ],
    name: "ParcelClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int96",
        name: "initialContributionRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "initialForSalePrice",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "baseCoordinate",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "path",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuctionEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuctionStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "licenseId",
        type: "uint256",
      },
    ],
    name: "getBeaconProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEndingBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNextProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartingBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "auctionEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endingBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "initializeClaimer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionEnd",
        type: "uint256",
      },
    ],
    name: "setAuctionEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionStart",
        type: "uint256",
      },
    ],
    name: "setAuctionStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beacon",
        type: "address",
      },
    ],
    name: "setBeacon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endingBid",
        type: "uint256",
      },
    ],
    name: "setEndingBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingBid",
        type: "uint256",
      },
    ],
    name: "setStartingBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612316806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001085760003560e01c8063644e979711620000a357806398dec6cc116200006e57806398dec6cc14620002515780639fcbf16b146200029c578063c250dc8b14620002b3578063d42afb5614620002db57600080fd5b8063644e979714620001e4578063738ce0ca14620001fb57806385c04d7a146200021257806387dc0c55146200023a57600080fd5b80631cbb2ce311620000e45780631cbb2ce314620001545780632d6b3a6b146200016b57806331b2ab2614620001b45780635ced333414620001cb57600080fd5b8062e8842c146200010d5780630556e9b91462000126578063181f4456146200013d575b600080fd5b620001246200011e366004620018ea565b620002f2565b005b62000124620001373660046200193a565b620003a8565b620001246200014e3660046200193a565b620003d6565b62000124620001653660046200193a565b620003f3565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc5546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b62000124620001c53660046200196a565b62000421565b620001d5620009cb565b604051908152602001620001ab565b600080516020620022c183398151915254620001d5565b620001246200020c3660046200193a565b620009dc565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc454620001d5565b600080516020620022a183398151915254620001d5565b62000197620002623660046200193a565b60009081527f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc660205260409020546001600160a01b031690565b62000197620002ad36600462001a71565b620009f9565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc354620001d5565b62000124620002ec36600462001a71565b62000b61565b620002fc62000bac565b600080516020620022c183398151915294909455600080516020620022a1833981519152929092557f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc3557f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc4557f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc580546001600160a01b0319166001600160a01b03909216919091179055565b620003b262000bac565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc355565b620003e062000bac565b600080516020620022c183398151915255565b620003fd62000bac565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc455565b600080516020620022c18339815191527f6ee8bf8f33d87ee8fc792bdab0fa8c5d1fb2132b416aab215664bf4732bc299760006200045e62000c37565b905080861015620004ed5760405162461bcd60e51b815260206004820152604860248201527f50434f4c6963656e7365436c61696d657246616365743a20496e697469616c2060448201527f666f722073616c6520707269636520646f6573206e6f74206d656574207265716064820152671d5a5c995b595b9d60c21b608482015260a4015b60405180910390fd5b82600101544211620005f157600182015482546040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810189905260009291909116906323b872dd906064016020604051808303816000875af11580156200055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000581919062001a91565b905080620005ef5760405162461bcd60e51b815260206004820152603460248201527f50434f4c6963656e7365436c61696d657246616365743a20496e697469616c2060448201527318db185a5b481c185e5b595b9d0819985a5b195960621b6064820152608401620004e4565b505b60006200060033878762000cd8565b33600081815260068701602090815260408083205490519495509193620006419392910160609290921b6001600160601b0319168252601482015260340190565b60408051601f198184030181529082905280516020909101206004870154909130916001600160a01b03169062000678906200185c565b6001600160a01b039283168152911660208201526040018190604051809103906000f5905080158015620006b0573d6000803e3d6000fd5b5033600090815260068701602052604081208054929350600192909190620006da90849062001acb565b9091555050600082815260058601602052604080822080546001600160a01b0319166001600160a01b038581169190911790915560028701549151635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3600482015291169063b6d200de90602401602060405180830381865afa1580156200076f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000795919062001ae6565b60018601546040516346ccbfb760e11b81526001600160a01b039182166004820152600b8d900b602482015291925060009190831690638d997f6e90604401602060405180830381865afa158015620007f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000818919062001b06565b60018701546040516323b872dd60e01b81523360048201526001600160a01b03868116602483015260448201849052929350600092909116906323b872dd906064016020604051808303816000875af11580156200087a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a0919062001a91565b905080620009105760405162461bcd60e51b815260206004820152603660248201527f50434f4c6963656e7365436c61696d657246616365743a20526571756972656460448201527508189d5999995c881c185e5b595b9d0819985a5b195960521b6064820152608401620004e4565b505060405163cdd42e9560e01b81523060048201819052602482015260448101849052336064820152600b8b900b608482015260a481018a90526001600160a01b038316915063cdd42e959060c401600060405180830381600087803b1580156200097a57600080fd5b505af11580156200098f573d6000803e3d6000fd5b50506040513392508491507f97c7a37a01ea09716c8cd03bacec8d6db1e30927bfa2ff373e434b074f81775f90600090a3505050505050505050565b6000620009d762000c37565b905090565b620009e662000bac565b600080516020620022a183398151915255565b6001600160a01b03811660009081527f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc7602090815260408083205490516001600160601b0319606086901b16928101929092526034820152600080516020620022c1833981519152906001600160f81b0319903090605401604051602081830303815290604052805190602001206040518060200162000a99906200185c565b601f1982820381018352601f90910116604081815260048701543060208401526001600160a01b03169082015260600160408051601f198184030181529082905262000ae9929160200162001b53565b6040516020818303038152906040528051906020012060405160200162000b4294939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209392505050565b62000b6b62000bac565b7f3b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc580546001600160a01b0319166001600160a01b0392909216919091179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331462000c355760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401620004e4565b565b600080516020620022a183398151915254600090600080516020620022c18339815191529042111562000c6d5760030154919050565b805460009062000c7e904262001b86565b905060008260000154836001015462000c98919062001b86565b905060008183856002015462000caf919062001ba0565b62000cbb919062001bd8565b905080846002015462000ccf919062001b86565b94505050505090565b600062000ce6838362000cfb565b905062000cf4848262000e3c565b9392505050565b60008082511162000d6e5760405162461bcd60e51b815260206004820152603660248201527f4c696247656f57656250617263656c3a2050617468206d757374206861766520604482015275185d081b19585cdd081bdb994818dbdb5c1bdb995b9d60521b6064820152608401620004e4565b7f1d99a33cbbd99d244d8804dd6e7f77acb60cc0c0934fe2f7b00cabddc4b4b0f862000d9d6000858562000e5c565b60028101546000908152600180830160209081526040909220805467ffffffffffffffff19166001600160401b0388161781558551909262000de692840191908701906200186a565b5060028201546040517f10b9af39155ed127f01ba5cd8b7893608d2619511eece37bbf623781af4d70de90600090a26002820180549350600190600062000e2e838762001acb565b909155509295945050505050565b62000e58828260405180602001604052806000815250620010c1565b5050565b60007f1d99a33cbbd99d244d8804dd6e7f77acb60cc0c0934fe2f7b00cabddc4b4b0f89050600083905060008084828151811062000e9e5762000e9e62001bef565b60200260200101519050600080600062000ec1866001600160401b031662001100565b600083815260208b8152604080832085845290915290205492955090935091505b60008b600281111562000ef95762000ef962001c05565b0362000f865762000f0c82600262001d1a565b81161562000f725760405162461bcd60e51b815260206004820152602c60248201527f4c696247656f57656250617263656c3a20436f6f7264696e617465206973206e60448201526b6f7420617661696c61626c6560a01b6064820152608401620004e4565b62000f7f82600262001d1a565b1762000fb6565b60018b600281111562000f9d5762000f9d62001c05565b0362000fb65760001962000fb383600262001d1a565b18165b60008062000fc4876200119a565b9850909250905081620010235762000fde60018962001acb565b97508a51881062000ff15750506200109c565b8a888151811062001006576200100662001bef565b602002602001015196506200101b876200119a565b985090925090505b6000806200103e6001600160401b038c16848a8a8a620011ef565b929d50919750925090508782141580620010585750868114155b156200108e57600088815260208d815260408083208a84528252808320979097558382528d815286822083835290529490942054935b909650945062000ee2915050565b6000938452602097885260408085209385529290975250902093909355505050505050565b620010cd8383620014e1565b620010dc60008484846200168c565b620010fb5760405162461bcd60e51b8152600401620004e49062001d28565b505050565b60008060008062001111856200179b565b6001600160401b031690506000620011298662001800565b6001600160401b031690506200114160108362001bd8565b94506200115060108262001bd8565b935060006200116160108462001d7a565b905060006200117260108462001d7a565b9050816200118282601062001ba0565b6200118e919062001acb565b96989597505050505050565b60f881901c80151590600090819083620011bc575060009150819050620011e8565b6003851692506001600160f81b03851660f8620011db60018462001b86565b901b600282901c17925050505b9193909250565b6000806000806000620012028a6200179b565b90506000620012118b62001800565b905088945087935086925089600003620012e1576200123260018262001d91565b9050621fffff6001600160401b0382161115620012925760405162461bcd60e51b815260206004820152601d60248201527f446972656374696f6e2077656e7420746f6f20666172206e6f727468210000006044820152606401620004e4565b6200129f60108262001db6565b6001600160401b0316600003620012d457620012bd60018562001acb565b9350620012cc60f08462001b86565b9250620014c1565b620012cc60108462001acb565b896001036200139b576000816001600160401b031611620013455760405162461bcd60e51b815260206004820152601d60248201527f446972656374696f6e2077656e7420746f6f2066617220736f757468210000006044820152606401620004e4565b6200135260018262001ddf565b90506200136160108262001db6565b6001600160401b0316600f036200138e576200137f60018562001b86565b9350620012cc60f08462001acb565b620012cc60108462001b86565b896002036200142257623fffff6001600160401b03831610620013cc5760009450849150620012cc600f8462001b86565b620013d960018362001d91565b9150620013e860108362001db6565b6001600160401b031660000362001415576200140660018662001acb565b9450620012cc600f8462001b86565b620012cc60018462001acb565b89600303620014c157816001600160401b03166000036200146857623fffff91506200145060108362001e0a565b6001600160401b03169450620012cc600f8462001acb565b6200147560018362001ddf565b91506200148460108362001db6565b6001600160401b0316600f03620014b157620014a260018662001b86565b9450620012cc600f8462001acb565b620014be60018462001b86565b92505b6020826001600160401b0316901b81179550505095509550955095915050565b6001600160a01b038216620015395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401620004e4565b60008181527f0a8995bbdd46f9746786f007089f3b619f2ad0fc5dfe298d61305940ef1ce25a60205260409020546001600160a01b031615620015bf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401620004e4565b6001600160a01b03821660009081527f0a8995bbdd46f9746786f007089f3b619f2ad0fc5dfe298d61305940ef1ce25b6020526040812080547f0a8995bbdd46f9746786f007089f3b619f2ad0fc5dfe298d61305940ef1ce25892600192916200162b90849062001acb565b9091555050600082815260028201602052604080822080546001600160a01b0319166001600160a01b03871690811790915590518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0384163b156200178f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290620016d390339089908890889060040162001e33565b6020604051808303816000875af192505050801562001711575060408051601f3d908101601f191682019092526200170e9181019062001e89565b60015b62001774573d80801562001742576040519150601f19603f3d011682016040523d82523d6000602084013e62001747565b606091505b5080516000036200176c5760405162461bcd60e51b8152600401620004e49062001d28565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905062001793565b5060015b949350505050565b63ffffffff602082901c16623fffff811115620017fb5760405162461bcd60e51b815260206004820152601d60248201527f5820636f6f7264696e617465206973206f7574206f6620626f756e64730000006044820152606401620004e4565b919050565b63ffffffff8116621fffff811115620017fb5760405162461bcd60e51b815260206004820152601d60248201527f5920636f6f7264696e617465206973206f7574206f6620626f756e64730000006044820152606401620004e4565b6103eb8062001eb683390190565b828054828255906000526020600020908101928215620018a8579160200282015b82811115620018a85782518255916020019190600101906200188b565b50620018b6929150620018ba565b5090565b5b80821115620018b65760008155600101620018bb565b6001600160a01b0381168114620018e757600080fd5b50565b600080600080600060a086880312156200190357600080fd5b8535945060208601359350604086013592506060860135915060808601356200192c81620018d1565b809150509295509295909350565b6000602082840312156200194d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156200198157600080fd5b843580600b0b81146200199357600080fd5b9350602085810135935060408601356001600160401b038082168214620019b957600080fd5b90935060608701359080821115620019d057600080fd5b818801915088601f830112620019e557600080fd5b813581811115620019fa57620019fa62001954565b8060051b604051601f19603f8301168101818110858211171562001a225762001a2262001954565b60405291825284820192508381018501918b83111562001a4157600080fd5b938501935b8285101562001a615784358452938501939285019262001a46565b989b979a50959850505050505050565b60006020828403121562001a8457600080fd5b813562000cf481620018d1565b60006020828403121562001aa457600080fd5b8151801515811462000cf457600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562001ae15762001ae162001ab5565b500190565b60006020828403121562001af957600080fd5b815162000cf481620018d1565b60006020828403121562001b1957600080fd5b5051919050565b60005b8381101562001b3d57818101518382015260200162001b23565b8381111562001b4d576000848401525b50505050565b6000835162001b6781846020880162001b20565b83519083019062001b7d81836020880162001b20565b01949350505050565b60008282101562001b9b5762001b9b62001ab5565b500390565b600081600019048311821515161562001bbd5762001bbd62001ab5565b500290565b634e487b7160e01b600052601260045260246000fd5b60008262001bea5762001bea62001bc2565b500490565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600181815b8085111562001c5c57816000190482111562001c405762001c4062001ab5565b8085161562001c4e57918102915b93841c939080029062001c20565b509250929050565b60008262001c755750600162001d14565b8162001c845750600062001d14565b816001811462001c9d576002811462001ca85762001cc8565b600191505062001d14565b60ff84111562001cbc5762001cbc62001ab5565b50506001821b62001d14565b5060208310610133831016604e8410600b841016171562001ced575081810a62001d14565b62001cf9838362001c1b565b806000190482111562001d105762001d1062001ab5565b0290505b92915050565b600062000cf4838362001c64565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008262001d8c5762001d8c62001bc2565b500690565b60006001600160401b0380831681851680830382111562001b7d5762001b7d62001ab5565b60006001600160401b038084168062001dd35762001dd362001bc2565b92169190910692915050565b60006001600160401b038381169083168181101562001e025762001e0262001ab5565b039392505050565b60006001600160401b038084168062001e275762001e2762001bc2565b92169190910492915050565b600060018060a01b03808716835280861660208401525083604083015260806060830152825180608084015262001e728160a085016020870162001b20565b601f01601f19169190910160a00195945050505050565b60006020828403121562001e9c57600080fd5b81516001600160e01b03198116811462000cf457600080fdfe60806040526040516103eb3803806103eb8339810160408190526100229161013d565b6100358261004f60201b6101291760201c565b610048816100e460201b6101be1760201c565b5050610177565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f5e00cdf5c1893326764dad3c20a33374e89545ec2d5f6a96396c2e00569864d680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461013a57600080fd5b50565b6000806040838503121561015057600080fd5b825161015b81610125565b602084015190925061016c81610125565b809150509250929050565b610265806101866000396000f3fe60806040523661000b57005b60007f5e00cdf5c1893326764dad3c20a33374e89545ec2d5f6a96396c2e00569864d680546040516366ffd66360e11b8152600080356001600160e01b03191660048301529293506001600160a01b039091169063cdffacc690602401602060405180830381865afa158015610085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a991906101ff565b90506001600160a01b0381166101055760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e808015610124573d6000f35b3d6000fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f5e00cdf5c1893326764dad3c20a33374e89545ec2d5f6a96396c2e00569864d680546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561021157600080fd5b81516001600160a01b038116811461022857600080fd5b939250505056fea2646970667358221220574e9e5186d25cb8c75cd78a1a12ccc55fbe6049367e5a6bc0b179bdc168cdb764736f6c634300080e00333b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc23b663854d6275cb61693c120edcaa0245b186f0d96cfc1f673910ff9abaa8bc1a2646970667358221220adde302796c36ae57da04fcca716b9d545752aee36362330f72cfb6076a28b2164736f6c634300080e0033";

type PCOLicenseClaimerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PCOLicenseClaimerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PCOLicenseClaimerFacet__factory extends ContractFactory {
  constructor(...args: PCOLicenseClaimerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PCOLicenseClaimerFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PCOLicenseClaimerFacet> {
    return super.deploy(overrides || {}) as Promise<PCOLicenseClaimerFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PCOLicenseClaimerFacet {
    return super.attach(address) as PCOLicenseClaimerFacet;
  }
  connect(signer: Signer): PCOLicenseClaimerFacet__factory {
    return super.connect(signer) as PCOLicenseClaimerFacet__factory;
  }
  static readonly contractName: "PCOLicenseClaimerFacet";
  public readonly contractName: "PCOLicenseClaimerFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PCOLicenseClaimerFacetInterface {
    return new utils.Interface(_abi) as PCOLicenseClaimerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PCOLicenseClaimerFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PCOLicenseClaimerFacet;
  }
}
