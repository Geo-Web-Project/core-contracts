/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeoWebParcelFacet,
  GeoWebParcelFacetInterface,
} from "../GeoWebParcelFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "availabilityIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLandParcelV1",
    outputs: [
      {
        internalType: "uint64",
        name: "baseCoordinate",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "path",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getLandParcelV2",
    outputs: [
      {
        internalType: "uint64",
        name: "swCoordinate",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "latDim",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lngDim",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061074e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806331a5ee9c146100465780637d31e460146100765780639a7f0f2c146100a8575b600080fd5b610060600480360381019061005b919061063e565b6100d9565b60405161006d9190610663565b60405180910390f35b610090600480360381019061008b9190610674565b6101f3565b60405161009f93929190610690565b60405180910390f35b6100c260048036038101906100bd9190610674565b610383565b6040516100d09291906106b9565b60405180910390f35b60006101077f7e0cc3fb5f6c763aeb177c0e2e6e8dfcdb0f20bad587e9ad1d76a188be3f6e8c60001b61055a565b6101337f5c7b3e15ebec3578b2133586c245513dc316108aa168a7c87fef8442d233d35b60001b61055a565b61015f7fcbce9709a12c29d89c13204195e22054cfcff699b2fb22a30dd77ef4c7805c2360001b61055a565b600061016961055d565b90506101977f8e8d36369aecfccf5ea86d19eb781703ec3fa637efc28250ea27a1187fac0bc160001b61055a565b6101c37f7196d683f58dab6e1c4ea8875e6b7a82c0058624710ed688b398f0ab180ffc2460001b61055a565b80600001600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b60008060006102247f5d24de419b998770178c0e55f1c77a7f9b941a753ce32e6faf4fded48b2b308360001b61055a565b6102507f3424f86d3cf60834468b2b8e3186f2e65855b6e0d3fb1e7f0e87f6e1904fb7d160001b61055a565b61027c7fdd9fde3785b598c8f7288780f27bdfaed2f814e8d4f6c278c4862c789f6cf6f960001b61055a565b600061028661055d565b90506102b47f1cac24ad8be8a313ab43c64122ffce9b1cd19018421952e8a6f5eeb59b523dae60001b61055a565b6102e07fbf960d8899ddfffea65aab97153ce4895b7f72c863a21db7d64464d8a40bdf1d60001b61055a565b600081600301600087815260200190815260200160002090506103257f3ae2c61c9885dba012f395d89b48254ded24c8afaf1cd6899f8520e9e62e436360001b61055a565b6103517ff9bab6d594ca8a0f1dfdf9c574e1f0480da4fb881987a9bc07f56fdf9b3fb2fe60001b61055a565b8060000160009054906101000a900467ffffffffffffffff168160020154826001015494509450945050509193909250565b600060606103b37f9ba8972663c72c619d637959b2a5bac28fe1e2cd6e32f7cd85d56727e4ce0ae360001b61055a565b6103df7ffe25958e039cf5eb5b0b37887abb6808d70f4271835abec2c118628c9bcb72ec60001b61055a565b61040b7fdbbb94daf995bbb09ae0068e57cc6c54b0dfa7a04479af4cb4aed18f57adc6e760001b61055a565b600061041561055d565b90506104437fe8118f6e50c6bba459d572fe5a1f34c3579698742fc11b1299ac506acc352bcd60001b61055a565b61046f7fb4507ffb378d8e12f3a3e9380ca6956583a03ff0e95edea1d780e5aa3f0b746960001b61055a565b600081600101600086815260200190815260200160002090506104b47f059bffa9d43c6ded3ce9605cdc7924e651b128f21e261d21421f07f5a5e1f8e260001b61055a565b6104e07f9a4f8cd76faf5dbc4baf36d80e54e9a5de05caca3111e49243a126cdac0500d160001b61055a565b8060000160009054906101000a900467ffffffffffffffff16816001018080548060200260200160405190810160405280929190818152602001828054801561054857602002820191906000526020600020905b815481526020019060010190808311610534575b50505050509050935093505050915091565b50565b600061058b7f52b85c93bf3e09d04001d9a769422b564b5f193eab23d5b6edaf361053e5887a60001b61063b565b6105b77f880899d65987dc857efa099840c97b178df5de8ab02f1b8c6266a7eb449df74b60001b61063b565b6105e37f085ae70a9c03bf06921d8bb534861488d592be1fbcd7c468d0721fe22467a8be60001b61063b565b60007f1d99a33cbbd99d244d8804dd6e7f77acb60cc0c0934fe2f7b00cabddc4b4b0f890506106347f7cb8dcede2396bf0a0b45a0a111a2c971bef933968b8ddb96e978e0bb8281db960001b61063b565b8091505090565b50565b6000806040838503121561065157600080fd5b82359150602083013590509250929050565b600060208201905082825292915050565b60006020828403121561068657600080fd5b8135905092915050565b600060608201905067ffffffffffffffff85168252836020830152826040830152949350505050565b60006040820167ffffffffffffffff851683526020604081850152818551808452606086019150828701935060005b818110156107095784518352838301925083850194506001810190506106e8565b5050809350505050939250505056fea264697066735822122074e1009db7ecd6163bdd04d750870c86f430ce1080f72b130f1e096313f1a22064736f6c63430008100033";

type GeoWebParcelFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeoWebParcelFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeoWebParcelFacet__factory extends ContractFactory {
  constructor(...args: GeoWebParcelFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GeoWebParcelFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeoWebParcelFacet> {
    return super.deploy(overrides || {}) as Promise<GeoWebParcelFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GeoWebParcelFacet {
    return super.attach(address) as GeoWebParcelFacet;
  }
  connect(signer: Signer): GeoWebParcelFacet__factory {
    return super.connect(signer) as GeoWebParcelFacet__factory;
  }
  static readonly contractName: "GeoWebParcelFacet";
  public readonly contractName: "GeoWebParcelFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeoWebParcelFacetInterface {
    return new utils.Interface(_abi) as GeoWebParcelFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeoWebParcelFacet {
    return new Contract(address, _abi, signerOrProvider) as GeoWebParcelFacet;
  }
}
