/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FairLaunchClaimer,
  FairLaunchClaimerInterface,
} from "../FairLaunchClaimer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "ClaimPriceFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ParcelClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "CLAIM_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "int96",
        name: "initialContributionRate",
        type: "int96",
      },
      {
        internalType: "bytes",
        name: "claimData",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "licenseId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "int96",
        name: "initialContributionRate",
        type: "int96",
      },
      {
        internalType: "bytes",
        name: "claimData",
        type: "bytes",
      },
    ],
    name: "claimPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endingBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "license",
    outputs: [
      {
        internalType: "contract ERC721License",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parcel",
    outputs: [
      {
        internalType: "contract GeoWebParcel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionEnd",
        type: "uint256",
      },
    ],
    name: "setAuctionEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionStart",
        type: "uint256",
      },
    ],
    name: "setAuctionStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endingBid",
        type: "uint256",
      },
    ],
    name: "setEndingBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_licenseAddress",
        type: "address",
      },
    ],
    name: "setLicense",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_parcelAddress",
        type: "address",
      },
    ],
    name: "setParcel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingBid",
        type: "uint256",
      },
    ],
    name: "setStartingBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startingBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611333806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063536a0a0f116100f957806386c1b4eb11610097578063b9fdd56911610071578063b9fdd56914610374578063c67a6da71461037d578063d547741f14610390578063d9a25a6f146103a357600080fd5b806386c1b4eb1461033257806391d1485414610359578063a217fddf1461036c57600080fd5b8063738ce0ca116100d3578063738ce0ca146102fc5780638129fc1c1461030f578063841c6b5c146103175780638456cb591461032a57600080fd5b8063536a0a0f146102b35780635c975abb146102c65780636b87d24c146102d157600080fd5b80632a24f46c11610166578063389ed26711610140578063389ed267146102845780633f4ba83a146102995780634f1130c3146102a15780634f245ef7146102aa57600080fd5b80632a24f46c146102555780632f2ff15d1461025e57806336568abe1461027157600080fd5b806301ffc9a7146101ae5780630556e9b9146101d65780630fd21c17146101eb578063181f4456146101fe5780631cbb2ce314610211578063248a9ca314610224575b600080fd5b6101c16101bc366004610f4c565b6103b6565b60405190151581526020015b60405180910390f35b6101e96101e4366004610f09565b6103ed565b005b6101e96101f9366004610e5f565b6103fe565b6101e961020c366004610f09565b61042c565b6101e961021f366004610f09565b61043d565b610247610232366004610f09565b60009081526097602052604090206001015490565b6040519081526020016101cd565b61024760cc5481565b6101e961026c366004610f21565b61044e565b6101e961027f366004610f21565b610478565b6102476000805160206112de83398151915281565b6101e96104fb565b61024760ce5481565b61024760cb5481565b6102476102c1366004610e79565b61051e565b60335460ff166101c1565b60c9546102e4906001600160a01b031681565b6040516001600160a01b0390911681526020016101cd565b6101e961030a366004610f09565b610531565b6101e9610542565b6101e9610325366004610e5f565b6105e1565b6101e961060f565b6102477ff7db13299c8a9e501861f04c20f69a2444829a36a363cfad4b58864709c7556081565b6101c1610367366004610f21565b61062f565b610247600081565b61024760cd5481565b61024761038b366004610e79565b61065a565b6101e961039e366004610f21565b61080c565b60ca546102e4906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b14806103e757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103f881610831565b5060cd55565b600061040981610831565b5060c980546001600160a01b0319166001600160a01b0392909216919091179055565b600061043781610831565b5060cb55565b600061044881610831565b5060ce55565b60008281526097602052604090206001015461046981610831565b610473838361083b565b505050565b6001600160a01b03811633146104ed5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104f782826108c1565b5050565b6000805160206112de83398151915261051381610831565b61051b610928565b50565b60006105286109bb565b95945050505050565b600061053c81610831565b5060cc55565b600061054e6001610a5e565b90508015610566576000805461ff0019166101001790555b61056e610aeb565b610576610b14565b610581600033610b43565b6105996000805160206112de83398151915233610b43565b801561051b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60006105ec81610831565b5060ca80546001600160a01b0319166001600160a01b0392909216919091179055565b6000805160206112de83398151915261062781610831565b61051b610b4d565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60007ff7db13299c8a9e501861f04c20f69a2444829a36a363cfad4b58864709c7556061068681610831565b60335460ff16156106cc5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e4565b6000806106db85870187610f8c565b60ca5460405163461d9a2160e01b81529294509092506001600160a01b03169063461d9a219061071190859085906004016111a5565b602060405180830381600087803b15801561072b57600080fd5b505af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190610f74565b60c954604051632851206560e21b81526001600160a01b038b811660048301526024820184905292965091169063a144819490604401600060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b50506040516001600160a01b038b1692508691507f97c7a37a01ea09716c8cd03bacec8d6db1e30927bfa2ff373e434b074f81775f90600090a3505050949350505050565b60008281526097602052604090206001015461082781610831565b61047383836108c1565b61051b8133610bc8565b610845828261062f565b6104f75760008281526097602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561087d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108cb828261062f565b156104f75760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60335460ff166109715760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e4565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600060cc5442106109cd575060ce5490565b60cb544210156109de575060cd5490565b600060cb54426109ee9190611253565b9050600060cb5460cc54610a029190611253565b905080610a2b5760405163d6b219ab60e01b8152600481018290524260248201526044016104e4565b6000818360cd54610a3c9190611234565b610a469190611214565b90508060cd54610a569190611253565b935050505090565b60008054610100900460ff1615610aa5578160ff166001148015610a815750303b155b610a9d5760405162461bcd60e51b81526004016104e49061110c565b506000919050565b60005460ff808416911610610acc5760405162461bcd60e51b81526004016104e49061110c565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610b125760405162461bcd60e51b81526004016104e49061115a565b565b600054610100900460ff16610b3b5760405162461bcd60e51b81526004016104e49061115a565b610b12610c2c565b6104f7828261083b565b60335460ff1615610b935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e4565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861099e3390565b610bd2828261062f565b6104f757610bea816001600160a01b03166014610c5f565b610bf5836020610c5f565b604051602001610c06929190611064565b60408051601f198184030181529082905262461bcd60e51b82526104e4916004016110d9565b600054610100900460ff16610c535760405162461bcd60e51b81526004016104e49061115a565b6033805460ff19169055565b60606000610c6e836002611234565b610c799060026111fc565b67ffffffffffffffff811115610c9f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610cc9576020820181803683370190505b509050600360fc1b81600081518110610cf257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d2f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610d53846002611234565b610d5e9060016111fc565b90505b6001811115610df2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610da057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610dc457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610deb8161129a565b9050610d61565b508315610e415760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104e4565b9392505050565b80356001600160a01b0381168114610ae657600080fd5b600060208284031215610e70578081fd5b610e4182610e48565b60008060008060608587031215610e8e578283fd5b610e9785610e48565b9350602085013580600b0b8114610eac578384fd5b9250604085013567ffffffffffffffff80821115610ec8578384fd5b818701915087601f830112610edb578384fd5b813581811115610ee9578485fd5b886020828501011115610efa578485fd5b95989497505060200194505050565b600060208284031215610f1a578081fd5b5035919050565b60008060408385031215610f33578182fd5b82359150610f4360208401610e48565b90509250929050565b600060208284031215610f5d578081fd5b81356001600160e01b031981168114610e41578182fd5b600060208284031215610f85578081fd5b5051919050565b60008060408385031215610f9e578182fd5b823567ffffffffffffffff8082168214610fb6578384fd5b9092506020908482013581811115610fcc578384fd5b8501601f81018713610fdc578384fd5b803582811115610fee57610fee6112c7565b8060051b604051601f19603f83011681018181108682111715611013576110136112c7565b604052828152858101945083860182850187018b1015611031578788fd5b8794505b83851015611053578035865294860194600194909401938601611035565b508096505050505050509250929050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161109c81601785016020880161126a565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516110cd81602884016020880161126a565b01602801949350505050565b60208152600082518060208401526110f881604085016020870161126a565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006040820167ffffffffffffffff8516835260206040818501528185518084526060860191508287019350845b818110156111ef578451835293830193918301916001016111d3565b5090979650505050505050565b6000821982111561120f5761120f6112b1565b500190565b60008261122f57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561124e5761124e6112b1565b500290565b600082821015611265576112656112b1565b500390565b60005b8381101561128557818101518382015260200161126d565b83811115611294576000848401525b50505050565b6000816112a9576112a96112b1565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46da26469706673582212201c60ccd507787436ec9ef10eda777b9dad6e15d80b5ed948c9e0e5940599101e64736f6c63430008040033";

type FairLaunchClaimerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairLaunchClaimerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FairLaunchClaimer__factory extends ContractFactory {
  constructor(...args: FairLaunchClaimerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FairLaunchClaimer";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FairLaunchClaimer> {
    return super.deploy(overrides || {}) as Promise<FairLaunchClaimer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FairLaunchClaimer {
    return super.attach(address) as FairLaunchClaimer;
  }
  connect(signer: Signer): FairLaunchClaimer__factory {
    return super.connect(signer) as FairLaunchClaimer__factory;
  }
  static readonly contractName: "FairLaunchClaimer";
  public readonly contractName: "FairLaunchClaimer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairLaunchClaimerInterface {
    return new utils.Interface(_abi) as FairLaunchClaimerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FairLaunchClaimer {
    return new Contract(address, _abi, signerOrProvider) as FairLaunchClaimer;
  }
}
