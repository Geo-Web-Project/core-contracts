/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CFABasePCOFacet,
  CFABasePCOFacetInterface,
} from "../CFABasePCOFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "contributionRate",
        type: "int96",
      },
    ],
    name: "PayerContributionRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "forSalePrice",
        type: "uint256",
      },
    ],
    name: "PayerForSalePriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "contributionRate",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentBid",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "int96",
            name: "contributionRate",
            type: "int96",
          },
          {
            internalType: "uint256",
            name: "perSecondFeeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perSecondFeeDenominator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forSalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct LibCFABasePCO.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "forSalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICFABeneficiary",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "contract IPCOLicenseParamsStore",
        name: "paramsStore",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "initLicense",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initLicenseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "int96",
        name: "newContributionRate",
        type: "int96",
      },
      {
        internalType: "uint256",
        name: "newForSalePrice",
        type: "uint256",
      },
    ],
    name: "initializeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayerBidActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "license",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "licenseId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ed9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636df38b841161005b5780636df38b84146101035780638d107ff5146101215780639190f8d31461013f578063def181011461015d57610088565b8063123119cd1461008d5780631355165f146100ab5780632c55dbed146100c75780636b87d24c146100e5575b600080fd5b61009561017b565b6040516100a291906112b8565b60405180910390f35b6100c560048036038101906100c0919061143c565b6101b3565b005b6100cf61091c565b6040516100dc91906114f9565b60405180910390f35b6100ed61092b565b6040516100fa9190611573565b60405180910390f35b61010b610963565b604051610118919061159d565b60405180910390f35b610129610972565b60405161013691906115c7565b60405180910390f35b61014761098a565b60405161015491906115c7565b60405180910390f35b6101656109ba565b604051610172919061168a565b60405180910390f35b600080610186610a7b565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6101bb610aa8565b60006101c5610b72565b9050868160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160020181905550878160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663356248da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906116ba565b82101561036e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103659061176a565b60405180910390fd5b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316a310266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040391906116ba565b905060008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663014df4146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906116ba565b90506104a884868484610b9f565b6104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de906117fc565b60405180910390fd5b60006104f1610bd7565b905060008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610564573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610588919061185a565b905060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b815260040161060a91906118a0565b602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b91906118f9565b73ffffffffffffffffffffffffffffffffffffffff168152508260000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d41c3a656040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190611964565b9050600061079a610a7b565b9050428160000181905550898160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550888160010160146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055508581600201819055508481600301819055508781600401819055508973ffffffffffffffffffffffffffffffffffffffff167fae3c4f18410e9cfcd20fc8664a5a0082a92f07a0a5febdc22bec0c53939373368960405161087f91906115c7565b60405180910390a28973ffffffffffffffffffffffffffffffffffffffff167f6602f4d39e226f3807ddac3e7aab03883832e2ea2d07ccdeaf513c16679fdcd08a6040516108cd919061159d565b60405180910390a26108f18a30848c88600001610c0490949392919063ffffffff16565b5061090c8e838b87600001610c6c909392919063ffffffff16565b5050505050505050505050505050565b6000610926610ccc565b905090565b600080610936610b72565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600061096d610ce0565b905090565b60008061097d610b72565b9050806002015491505090565b6000610994610ccc565b156109b25760006109a3610a7b565b905080600401549150506109b7565b600090505b90565b6109c2611228565b60006109cc610a7b565b9050806040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a9004600b0b600b0b600b0b8152602001600282015481526020016003820154815260200160048201548152505091505090565b6000807f3c72d60a0f1018560e1ecd381dcc70c04920ba28255c0b6f8b496f8f6f727f4190508091505090565b610ab0610e47565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b705733610b0f610e47565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fff4127cb000000000000000000000000000000000000000000000000000000008152600401610b67929190611991565b60405180910390fd5b565b6000807f7afbdc140ed2feae39152d66ce3c9b7394a1bbd963c668f15d7196d48d2532c990508091505090565b600080828487610baf91906119e9565b610bb99190611a72565b9050846bffffffffffffffffffffffff168114915050949350505050565b6000807feaf1cf088be31249661a61fc7743edf628a39210375613d4be0a9cda3ec06da690508091505090565b6060610c618686868686600067ffffffffffffffff811115610c2957610c28611aa3565b5b6040519080825280601f01601f191660200182016040528015610c5b5781602001600182028036833780820191505090505b50610e74565b905095945050505050565b610cc684848484600067ffffffffffffffff811115610c8e57610c8d611aa3565b5b6040519080825280601f01601f191660200182016040528015610cc05781602001600182028036833780820191505090505b50611036565b50505050565b600080610cd7610ce0565b600b0b13905090565b600080610ceb610b72565b90506000610cf7610bd7565b905060008160000160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a1e8888460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d41c3a656040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd19190611964565b30610dda6111f0565b6040518463ffffffff1660e01b8152600401610df893929190611af3565b608060405180830381865afa158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611b3f565b505091505080935050505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b60608660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8860010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394229ecb888b8b8a600067ffffffffffffffff811115610f3a57610f39611aa3565b5b6040519080825280601f01601f191660200182016040528015610f6c5781602001600182028036833780820191505090505b50604051602401610f81959493929190611c57565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050856040518463ffffffff1660e01b8152600401610fe293929190611cd2565b6000604051808303816000875af1158015611001573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061102a9190611e0e565b90509695505050505050565b8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362fc305e878988600067ffffffffffffffff8111156110f9576110f8611aa3565b5b6040519080825280601f01601f19166020018201604052801561112b5781602001600182028036833780820191505090505b5060405160240161113f9493929190611e57565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050846040518463ffffffff1660e01b81526004016111a093929190611cd2565b6000604051808303816000875af11580156111bf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111e89190611e0e565b505050505050565b6000806111fb610b72565b90508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600b0b81526020016000815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112a282611277565b9050919050565b6112b281611297565b82525050565b60006020820190506112cd60008301846112a9565b92915050565b6000604051905090565b600080fd5b600080fd5b60006112f282611297565b9050919050565b611302816112e7565b811461130d57600080fd5b50565b60008135905061131f816112f9565b92915050565b600061133082611297565b9050919050565b61134081611325565b811461134b57600080fd5b50565b60008135905061135d81611337565b92915050565b600061136e82611297565b9050919050565b61137e81611363565b811461138957600080fd5b50565b60008135905061139b81611375565b92915050565b6000819050919050565b6113b4816113a1565b81146113bf57600080fd5b50565b6000813590506113d1816113ab565b92915050565b6113e081611297565b81146113eb57600080fd5b50565b6000813590506113fd816113d7565b92915050565b600081600b0b9050919050565b61141981611403565b811461142457600080fd5b50565b60008135905061143681611410565b92915050565b600080600080600080600060e0888a03121561145b5761145a6112dd565b5b60006114698a828b01611310565b975050602061147a8a828b0161134e565b965050604061148b8a828b0161138c565b955050606061149c8a828b016113c2565b94505060806114ad8a828b016113ee565b93505060a06114be8a828b01611427565b92505060c06114cf8a828b016113c2565b91505092959891949750929550565b60008115159050919050565b6114f3816114de565b82525050565b600060208201905061150e60008301846114ea565b92915050565b6000819050919050565b600061153961153461152f84611277565b611514565b611277565b9050919050565b600061154b8261151e565b9050919050565b600061155d82611540565b9050919050565b61156d81611552565b82525050565b60006020820190506115886000830184611564565b92915050565b61159781611403565b82525050565b60006020820190506115b2600083018461158e565b92915050565b6115c1816113a1565b82525050565b60006020820190506115dc60008301846115b8565b92915050565b6115eb816113a1565b82525050565b6115fa81611297565b82525050565b61160981611403565b82525050565b60c08201600082015161162560008501826115e2565b50602082015161163860208501826115f1565b50604082015161164b6040850182611600565b50606082015161165e60608501826115e2565b50608082015161167160808501826115e2565b5060a082015161168460a08501826115e2565b50505050565b600060c08201905061169f600083018461160f565b92915050565b6000815190506116b4816113ab565b92915050565b6000602082840312156116d0576116cf6112dd565b5b60006116de848285016116a5565b91505092915050565b600082825260208201905092915050565b7f4346414261736550434f46616365743a204d696e696d756d20666f722073616c60008201527f65207072696365206e6f74206d65740000000000000000000000000000000000602082015250565b6000611754602f836116e7565b915061175f826116f8565b604082019050919050565b6000602082019050818103600083015261178381611747565b9050919050565b7f4346414261736550434f46616365743a20496e636f727265637420666f72207360008201527f616c652070726963650000000000000000000000000000000000000000000000602082015250565b60006117e66029836116e7565b91506117f18261178a565b604082019050919050565b60006020820190508181036000830152611815816117d9565b9050919050565b600061182782611297565b9050919050565b6118378161181c565b811461184257600080fd5b50565b6000815190506118548161182e565b92915050565b6000602082840312156118705761186f6112dd565b5b600061187e84828501611845565b91505092915050565b6000819050919050565b61189a81611887565b82525050565b60006020820190506118b56000830184611891565b92915050565b60006118c682611297565b9050919050565b6118d6816118bb565b81146118e157600080fd5b50565b6000815190506118f3816118cd565b92915050565b60006020828403121561190f5761190e6112dd565b5b600061191d848285016118e4565b91505092915050565b600061193182611297565b9050919050565b61194181611926565b811461194c57600080fd5b50565b60008151905061195e81611938565b92915050565b60006020828403121561197a576119796112dd565b5b60006119888482850161194f565b91505092915050565b60006040820190506119a660008301856112a9565b6119b360208301846112a9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119f4826113a1565b91506119ff836113a1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a3857611a376119ba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a7d826113a1565b9150611a88836113a1565b925082611a9857611a97611a43565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000611add82611540565b9050919050565b611aed81611ad2565b82525050565b6000606082019050611b086000830186611ae4565b611b1560208301856112a9565b611b2260408301846112a9565b949350505050565b600081519050611b3981611410565b92915050565b60008060008060808587031215611b5957611b586112dd565b5b6000611b67878288016116a5565b9450506020611b7887828801611b2a565b9350506040611b89878288016116a5565b9250506060611b9a878288016116a5565b91505092959194509250565b6000611bb182611540565b9050919050565b611bc181611ba6565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c01578082015181840152602081019050611be6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c2982611bc7565b611c338185611bd2565b9350611c43818560208601611be3565b611c4c81611c0d565b840191505092915050565b600060a082019050611c6c6000830188611bb8565b611c7960208301876112a9565b611c8660408301866112a9565b611c93606083018561158e565b8181036080830152611ca58184611c1e565b90509695505050505050565b6000611cbc82611540565b9050919050565b611ccc81611cb1565b82525050565b6000606082019050611ce76000830186611cc3565b8181036020830152611cf98185611c1e565b90508181036040830152611d0d8184611c1e565b9050949350505050565b600080fd5b600080fd5b611d2a82611c0d565b810181811067ffffffffffffffff82111715611d4957611d48611aa3565b5b80604052505050565b6000611d5c6112d3565b9050611d688282611d21565b919050565b600067ffffffffffffffff821115611d8857611d87611aa3565b5b611d9182611c0d565b9050602081019050919050565b6000611db1611dac84611d6d565b611d52565b905082815260208101848484011115611dcd57611dcc611d1c565b5b611dd8848285611be3565b509392505050565b600082601f830112611df557611df4611d17565b5b8151611e05848260208601611d9e565b91505092915050565b600060208284031215611e2457611e236112dd565b5b600082015167ffffffffffffffff811115611e4257611e416112e2565b5b611e4e84828501611de0565b91505092915050565b6000608082019050611e6c6000830187611bb8565b611e7960208301866112a9565b611e86604083018561158e565b8181036060830152611e988184611c1e565b90509594505050505056fea26469706673582212206667b738d806e3fda011aef46614e402b8c9c73654ac69a706c8b5ffabc4076264736f6c63430008100033";

type CFABasePCOFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CFABasePCOFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CFABasePCOFacet__factory extends ContractFactory {
  constructor(...args: CFABasePCOFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CFABasePCOFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CFABasePCOFacet> {
    return super.deploy(overrides || {}) as Promise<CFABasePCOFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CFABasePCOFacet {
    return super.attach(address) as CFABasePCOFacet;
  }
  connect(signer: Signer): CFABasePCOFacet__factory {
    return super.connect(signer) as CFABasePCOFacet__factory;
  }
  static readonly contractName: "CFABasePCOFacet";
  public readonly contractName: "CFABasePCOFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CFABasePCOFacetInterface {
    return new utils.Interface(_abi) as CFABasePCOFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CFABasePCOFacet {
    return new Contract(address, _abi, signerOrProvider) as CFABasePCOFacet;
  }
}
